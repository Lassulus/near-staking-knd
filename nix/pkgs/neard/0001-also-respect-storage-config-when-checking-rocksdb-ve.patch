From f2edcec57d16b019e39a840a11e9a1e4162d7a94 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?J=C3=B6rg=20Thalheim?= <joerg@thalheim.io>
Date: Tue, 19 Jul 2022 13:12:00 +0000
Subject: [PATCH] also respect storage config when checking rocksdb version
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: JÃ¶rg Thalheim <joerg@thalheim.io>
---
 core/store/src/config.rs | 2 +-
 core/store/src/db.rs     | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/core/store/src/config.rs b/core/store/src/config.rs
index 1c54f3989..83fb8fd76 100644
--- a/core/store/src/config.rs
+++ b/core/store/src/config.rs
@@ -158,7 +158,7 @@ pub fn get_path(&self) -> &std::path::Path {
     /// Returns version of the database; or `None` if it does not exist.
     pub fn get_version_if_exists(&self) -> std::io::Result<Option<DbVersion>> {
         if self.check_if_exists() {
-            Some(crate::RocksDB::get_version(&self.path)).transpose()
+            Some(crate::RocksDB::get_version(&self.path, &self.config)).transpose()
         } else {
             Ok(None)
         }
diff --git a/core/store/src/db.rs b/core/store/src/db.rs
index b9fc2438e..8805a3faa 100644
--- a/core/store/src/db.rs
+++ b/core/store/src/db.rs
@@ -692,8 +692,8 @@ pub fn block_until_all_instances_are_dropped() {
     }
 
     /// Returns version of the database state on disk.
-    pub fn get_version(path: &Path) -> io::Result<DbVersion> {
-        let value = RocksDB::open(path, &StoreConfig::default(), Mode::ReadOnly)?
+    pub fn get_version(path: &Path, config: &StoreConfig) -> io::Result<DbVersion> {
+        let value = RocksDB::open(path, config, Mode::ReadOnly)?
             .get_raw_bytes(DBCol::DbVersion, VERSION_KEY)?
             .ok_or_else(|| {
                 other_error(
-- 
2.36.1

